/* ============================================================
   BASE UTILITY CLASSES
   ============================================================ */

/* 
  .fade-element 
  - Base for fade-related animations.
  - Starts hidden; use .fade-in (or corresponding animation classes) to reveal.
*/
.fade-element {
  opacity: 0;
  transform: translateY(0);
  transition: opacity 1s ease-in-out, transform 1s ease-in-out;
}

.fade-element.fade-in {
  opacity: 1;
}

/* 
  Animation Trigger 
  - Use [data-animate] on any element you want to animate.
  - When the element is in view, the AnimateOnScroll component adds the .in-view class.
*/
[data-animate] {
  opacity: 0;
  transition: opacity 0.3s ease-out;
}
[data-animate].in-view {
  opacity: 1;
}

/* ============================================================
   KEYFRAME ANIMATIONS
   ============================================================ */

/* Simple Fade */
@keyframes fade {
  from { opacity: 0; }
  to   { opacity: 1; }
}
.fade.fade-in.in-view {
  animation: fade 1s ease-in-out forwards;
}

/* Fade Up: from 20px below to original position */
@keyframes fade-up {
  from { opacity: 0; transform: translateY(20px); }
  to   { opacity: 1; transform: translateY(0); }
}
.fade-up.fade-in.in-view {
  animation: fade-up 1s ease-in-out forwards;
}

/* Fade Down: from 20px above to original position */
@keyframes fade-down {
  from { opacity: 0; transform: translateY(-20px); }
  to   { opacity: 1; transform: translateY(0); }
}
.fade-down.fade-in.in-view {
  animation: fade-down 1s ease-in-out forwards;
}

/* Fade Left: from 50px left to original position */
@keyframes fade-left {
  from { opacity: 0; transform: translateX(-50px); }
  to   { opacity: 1; transform: translateX(0); }
}
.fade-left.fade-in.in-view {
  animation: fade-left 1s ease-in-out forwards;
}

/* Fade Right: from 50px right to original position */
@keyframes fade-right {
  from { opacity: 0; transform: translateX(50px); }
  to   { opacity: 1; transform: translateX(0); }
}
.fade-right.fade-in.in-view {
  animation: fade-right 1s ease-in-out forwards;
}

/* Additional Animations */

/* Zoom In: scales up from 0.8 to 1 while fading in */
@keyframes zoom-in {
  from { opacity: 0; transform: scale(0.8); }
  to   { opacity: 1; transform: scale(1); }
}
.zoom-in.fade-in.in-view {
  animation: zoom-in 0.8s ease-in-out forwards;
}

/* Zoom Out: scales down from 1.2 to 1 while fading in */
@keyframes zoom-out {
  from { opacity: 0; transform: scale(1.2); }
  to   { opacity: 1; transform: scale(1); }
}
.zoom-out.fade-in.in-view {
  animation: zoom-out 0.8s ease-in-out forwards;
}

/* Rotate In: rotates from 90deg to 0 while fading in */
@keyframes rotate-in {
  from { opacity: 0; transform: rotate(90deg); }
  to   { opacity: 1; transform: rotate(0deg); }
}
.rotate-in.fade-in.in-view {
  animation: rotate-in 1s ease-in-out forwards;
}

/* ============================================================
   CSSTransition FOR MENUS (e.g., using React Transition Group)
   ============================================================ */

/* Menu Entering */
.menu-enter {
  opacity: 0;
  transform: translateY(-20px);
}
.menu-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 300ms ease-in-out, transform 300ms ease-in-out;
}

/* Menu Exiting */
.menu-exit {
  opacity: 1;
  transform: translateY(0);
}
.menu-exit-active {
  opacity: 0;
  transform: translateY(-20px);
  transition: opacity 300ms ease-in-out, transform 300ms ease-in-out;
}
